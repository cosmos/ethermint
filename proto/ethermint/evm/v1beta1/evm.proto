syntax = "proto3";
package ethermint.evm.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/cosmos/ethermint/x/evm/types";

// Params defines the EVM module parameters
message Params {
  option (gogoproto.goproto_stringer) = false;

  // evm_denom represents the token denomination used to run the EVM state
  // transitions.
  string evm_denom = 1 [ (gogoproto.moretags) = "yaml:\"evm_denom\"" ];
}

// ChainConfig defines the Ethereum ChainConfig parameters using sdk.Int values
// instead of big.Int.
//
// NOTE 1: Since empty/uninitialized Ints (i.e with a nil big.Int value) are
// parsed to zero, we need to manually specify that negative Int values will be
// considered as nil. See getBlockValue for reference.
//
// NOTE 2: This type is not a configurable Param since the SDK does not allow
// for validation against a previous stored parameter values or the current
// block height (retrieved from context). If you want to update the config
// values, use an software upgrade procedure.
message ChainConfig {
  // Homestead switch block (< 0 no fork, 0 = already homestead)
  string homestead_block = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"homestead_block\"",
    (gogoproto.nullable) = false
  ];
  // TheDAO hard-fork switch block (< 0 no fork)
  string dao_fork_block = 2 [
    (gogoproto.customname) = "DAOForkBlock",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"dao_fork_block\"",
    (gogoproto.nullable) = false
  ];
  // Whether the nodes supports or opposes the DAO hard-fork
  bool dao_fork_support = 3 [
    (gogoproto.customname) = "DAOForkSupport",
    (gogoproto.moretags) = "yaml:\"dao_fork_support\""
  ];
  // EIP150 implements the Gas price changes
  // (https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (< 0 no fork)
  string eip150_block = 4 [
    (gogoproto.customname) = "EIP150Block",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"eip150_block\"",
    (gogoproto.nullable) = false
  ];
  // EIP150 HF hash (needed for header only clients as only gas pricing changed)
  string eip150_hash = 5 [
    (gogoproto.customname) = "EIP150Hash",
    (gogoproto.moretags) = "yaml:\"byzantium_block\""
  ];
  // EIP155Block HF block
  string eip155_block = 6 [
    (gogoproto.customname) = "EIP155Block",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"eip155_block\"",
    (gogoproto.nullable) = false
  ];
  // EIP158 HF block
  string eip158_block = 7 [
    (gogoproto.customname) = "EIP158Block",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"eip158_block\"",
    (gogoproto.nullable) = false
  ];
  // Byzantium switch block (< 0 no fork, 0 = already on byzantium)
  string byzantium_block = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"byzantium_block\"",
    (gogoproto.nullable) = false
  ];
  // Constantinople switch block (< 0 no fork, 0 = already activated)
  string constantinople_block = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"constantinople_block\"",
    (gogoproto.nullable) = false
  ];
  // Petersburg switch block (< 0 same as Constantinople)
  string petersburg_block = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"petersburg_block\"",
    (gogoproto.nullable) = false
  ];
  // Istanbul switch block (< 0 no fork, 0 = already on istanbul)
  string istanbul_block = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"istanbul_block\"",
    (gogoproto.nullable) = false
  ];
  // Eip-2384 (bomb delay) switch block (< 0 no fork, 0 = already activated)
  string muir_glacier_block = 12 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"muir_glacier_block\"",
    (gogoproto.nullable) = false
  ];
  // YOLO v1: https://github.com/ethereum/EIPs/pull/2657 (Ephemeral testnet)
  string yolo_v1_block = 13 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"yolo_v1_block\"",
    (gogoproto.nullable) = false
  ];
  // EWASM switch block (< 0 no fork, 0 = already activated)
  string ewasm_block = 14 [
    (gogoproto.customname) = "EWASMBlock",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"ewasm_block\"",
    (gogoproto.nullable) = false
  ];
}

// State represents a single Storage key value pair item.
message State {
  string key = 1;
  string value = 2;
}

// TransactionLogs define the logs generated from a transaction execution
// with a given hash. It it used for import/export data as transactions are not
// persisted on blockchain state after an upgrade.
message TransactionLogs {
  string hash = 1;
  repeated Log logs = 2;
}

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event. These events are generated by the LOG opcode and stored/indexed by
// the node.
message Log {
  // Consensus fields:

  // address of the contract that generated the event
  string address = 1;
  // list of topics provided by the contract.
  repeated string topics = 2;
  // supplied by the contract, usually ABI-encoded
  bytes data = 3;

  // Derived fields. These fields are filled in by the node
  // but not secured by consensus.

  // block in which the transaction was included
  uint64 block_number = 4 [ (gogoproto.jsontag) = "blockNumber" ];
  // hash of the transaction
  string tx_hash = 5 [ (gogoproto.jsontag) = "transactionHash" ];
  // index of the transaction in the block
  uint64 tx_index = 6 [ (gogoproto.jsontag) = "transactionIndex" ];
  // hash of the block in which the transaction was included
  string block_hash = 7 [ (gogoproto.jsontag) = "blockHash" ];
  // index of the log in the block
  uint64 index = 8 [ (gogoproto.jsontag) = "logIndex" ];

  // The Removed field is true if this log was reverted due to a chain
  // reorganisation. You must pay attention to this field if you receive logs
  // through a filter query.
  bool removed = 9;
}

// MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.
message MsgEthereumTx {
  option (gogoproto.goproto_getters) = false;

  TxData data = 1;
  // caches
  double size = 2 [ (gogoproto.jsontag) = "-" ];
  SigCache from = 3 [ (gogoproto.jsontag) = "-" ];
}

// TxData implements the Ethereum transaction data structure. It is used
// solely as intended in Ethereum abiding by the protocol.
message TxData {
  option (gogoproto.goproto_getters) = false;

  uint64 nonce = 1 [ (gogoproto.customname) = "AccountNonce" ];
  bytes price = 2 [ (gogoproto.jsontag) = "gasPrice" ];
  uint64 gas = 3 [ (gogoproto.customname) = "GasLimit" ];
  string to = 4 [
    (gogoproto.customname) = "Recipient",
    (gogoproto.moretags) = "rlp:\"nil\""
  ];
  bytes value = 5 [ (gogoproto.customname) = "Amount" ];
  bytes input = 6 [ (gogoproto.customname) = "Payload" ];
  // signature values
  bytes v = 7;
  bytes r = 8;
  bytes s = 9;
  // hash is only used when marshaling to JSON
  string hash = 10 [ (gogoproto.moretags) = "rlp:\"-\"" ];
}

// SigCache is used to cache the derived sender and contains the signer used
// to derive it.
message SigCache {
  option (gogoproto.goproto_getters) = false;

  EIP155Signer signer = 1;
  string address = 2;
}

// EIP155Transaction implements Signer using the EIP155 rules.
message EIP155Signer {
  option (gogoproto.goproto_getters) = false;

  bytes chain_id = 1 [ (gogoproto.customname) = "chainId" ];
  bytes chain_id_mul = 2 [ (gogoproto.customname) = "chainIdMul" ];
}

// MsgEthermint implements a cosmos equivalent structure for Ethereum
// transactions
message MsgEthermint {
  option (gogoproto.goproto_getters) = false;

  uint64 nonce = 1 [ (gogoproto.customname) = "AccountNonce" ];
  string price = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 gas = 3 [ (gogoproto.customname) = "GasLimit" ];
  string to = 4 [
    (gogoproto.customname) = "Recipient",
    (gogoproto.moretags) = "rlp:\"nil\""
  ];
  string value = 5 [
    (gogoproto.customname) = "Amount",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  bytes input = 6 [ (gogoproto.customname) = "Payload" ];
  // From address (formerly derived from signature)
  string from = 7;
}

// ResultData represents the data returned in an sdk.Result
message ResultData {
  // contract_address contains the ethereum address of the created contract (if
  // any). If the state transition is an evm.Call, the contract address will be
  // empty.
  string contract_address = 1
      [ (gogoproto.moretags) = "yaml:\"contract_address\"" ];
  // bloom represents the bloom filter bytes
  bytes bloom = 2;
  // tx_logs contains the transaction hash and the proto-compatible ethereum
  // logs.
  TransactionLogs tx_logs = 3 [
    (gogoproto.moretags) = "yaml:\"tx_logs\"",
    (gogoproto.nullable) = false
  ];
  // ret defines the bytes from the execution.
  bytes ret = 4;
}